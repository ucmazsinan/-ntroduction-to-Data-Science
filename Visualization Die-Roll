import matplotlib.pyplot as plt

import numpy as np

import random

import seaborn as sns

#Generate 600 instances for die-roll
rolls = [random.randrange(1,7) for i in range(6000)]

# Unique values all six face for die and their frequencies
values, frequencies = np.unique(rolls, return_counts=True)

#Graph title , die faces and frequencies

title = f'Rolling a Six-Sided Die {len(rolls):,} times'

sns.set_style('dark')

axes = sns.barplot(x = values, y = frequencies, palette = 'bright')

axes.set_title(title)
axes.set(xlabel = 'Die Value', ylabel = 'Frequency')

#set of the height with y axes

axes.set_ylim(top=max(frequencies) * 1.10)

for bar, frequency in zip(axes.patches, frequencies):
    text_x = bar.get_x() + bar.get_width() / 2
    text_y = bar.get_height()
    text = f'{frequency:,}\n{frequency / len(rolls):.3%}'
    axes.text(text_x, text_y, text,
              fontsize = 11, ha = 'center', va = 'bottom')
              
"""
Finally, displays each bar’s frequency value and percentage of the total
rolls. The axes object’s patches collection contains two-dimensional colored shapes that
represent the plot’s bars. The for statement uses zip to iterate through the patches and
their corresponding frequency values. Each iteration unpacks into bar and frequency
one of the tuples zip returns. The for statement’s suite operates as follows:
• The first statement calculates the center x-coordinate where the text will appear.
We calculate this as the sum of the bar’s left-edge x-coordinate (bar.get_x())
and half of the bar’s width (bar.get_width() / 2.0).
• The second statement gets the y-coordinate where the text will appear—
bar.get_y() represents the bar’s top.
• The third statement creates a two-line string containing that bar’s frequency and
the corresponding percentage of the total die rolls.
• The last statement calls the Axes object’s text method to display the text above
the bar. This method’s first two arguments specify the text’s x–y position, and the
third argument is the text to display. The keyword argument ha specifies the horizontal alignment—we 
centered text horizontally around the x-coordinate. The
keyword argument va specifies the vertical alignment—we aligned the bottom of
the text with at the y-coordinate. The final bar plot is shown below:

"""
plt.show()





